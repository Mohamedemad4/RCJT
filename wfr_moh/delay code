 
#include <Wire.h>
#include <Servo.h>
#include <math.h>

#include "AFMotor.h"
#include "NewPing.h"
#include "SoftwareWire.h"
#include "HMC5883L.h"
#include "bmp085.h"
#include "I2Cdev.h"
#include "MPU6050.h"

//Left Sensor connected to A8,A9
//Right Sensor connected to Digital pins 20,21
SoftwareWire Wire2( A4, A5);// SDA,SCL

MPU6050 accc ;
HMC5883L mag;

Servo deploy_servo;
Servo cam;
volatile int cpos = 4; //contains current position of the cam Servo

#define max_dist 400
#define speed_default 100
#define speed_max 155
NewPing left_us(A0, A0, max_dist);
NewPing center_us(A1, A1, max_dist);
NewPing right_us(A2, A2, max_dist);

AF_DCMotor fleft(2, MOTOR12_1KHZ);
AF_DCMotor fright(1, MOTOR12_1KHZ);

AF_DCMotor bleft(3, MOTOR34_1KHZ);
AF_DCMotor bright(4, MOTOR34_1KHZ);

    int turnr = 0;
    int p;
    int maxp;
    int minp;


void setup() {

  //Push Button
  pinMode(A11, INPUT_PULLUP);
  pinMode(A10, 1);

  //IR Color Sensor
  pinMode(A3, INPUT);

  deploy_servo.attach(10);
  deploy_servo.write(130);

  digitalWrite(A10, 0);

  cam.attach(9);
  pinMode(22, INPUT_PULLUP);
  pinMode(23, INPUT_PULLUP);
  pinMode(24, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(18), checkForIns, CHANGE);

  Wire.begin();
  Wire2.begin();


  accc.initialize(); //see README
  accc.setI2CBypassEnabled(true);
  bmp085Init(0);    // Set Baseline @ sea level
  mag.initialize();
  Serial.begin(9600);

  Serial.println("Ready!");

  while (digitalRead(A11) == 1) {
    delay(50);
  }
    Serial.println("Starting...");
  delay(1000);
}

void lop() { //each iteration should take up a tile TODO:
  //sensorDebug();
  turn(90,1);
  delay(2000);
  drive_forward();
  delay(5000);

}



void loop(){
  //right wall follower with delay
      while(GetDist(center_us)>15){
          drive_forward();
        }
 
          //!!!dont forget to calibrate the us_  in the maze!!!
          
         if(GetDist(center_us)<=15  ){  //found a wall infront of you!
          
          if(GetDist(right_us)>=7){//turn right if there isn't a wall on the right
            turn_right();
            delay(650);

          }

            else if(GetDist(right_us)<7){// turn left if there is a wall on the right
              turn_left();
              delay(650);
              }

          
          
         
         }

         if(GetDist(center_us)<=7 && GetDist(right_us)<=7 && GetDist(left_us)<=7){  //emergyncy if the robot was traped in a 3 walled tile 
              turn_right();
              delay(1100);            

          }

          if(GetDist(right_us)>=7){//always right
              turn_right();
              delay(650);
             

            }


            //!!!dont forget to calibrate the delay  in the maze!!!
          while(GetDist(right_us)<=7){//aligment right
              turn_left();
              delay(50);
            }


            while(GetDist(left_us)<=7){//aligment left
              turn_right();
              delay(50);
            }
            
            if(digitalRead(A3)==1){//if a trap is found 
              motor_stop();
              delay(200);
              drive_backward();
              delay(300);

              if(GetDist(left_us)>GetDist(right_us)){//turn left if left is greater than right
                turn_left();
                delay(650);
                }

              else if(GetDist(left_us)<GetDist(right_us)){//turn right if right is greater than left
                turn_right();
                delay(650);
                }
              }

/*          if(27<GetIrHeatleft()<40){//left ir-tempreture sensor. note:Extra range due to the air conditioners as wall will be colder than that 
              motor_stop(); //want to test the loop !!
              drop_kit();
              delay(100);
              drop_kit();
              delay(100);
            }

           if(27<GetIrHeatright()<40){//left ir-tempreture sensor. note:Extra range due to the air conditioners as wall will be colder than that 
              motor_stop(); //want to test the loop !!
              drop_kit();
              delay(100);
              drop_kit();
              delay(100);
            }
            //trap code not done yet
            //the cam drop code is not done yet  */ 
        
      }
        
   
  
  
  
